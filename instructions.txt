Install fresh ubuntu

# Install and make zsh default shell
sudo apt-get upgrade
sudo apt-get update
sudo apt install zsh
chsh -s $(which zsh)

# Exit and open, it may trigger the new user prompt, just accept
# now let's make it look into .config/zsh/.zshrc instead of in ~
sudo vim /etc/zsh/zshenv

# add this lines anywhere in the top: 
if [[ -z "$XDG_CONFIG_HOME" ]]
then
        export XDG_CONFIG_HOME="$HOME/.config/"
fi

if [[ -d "$XDG_CONFIG_HOME/zsh" ]]
then
        export ZDOTDIR="$XDG_CONFIG_HOME/zsh/"
fi

# now let's put our .zshrc there
cd
mkdir .config
mkdir .config/zsh
vim .zshrc
#copy paste there the .zshrc from this folder
#restart

mkdir .config/zsh/plugins
cd .config/zsh/plugins
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
git clone https://github.com/zsh-users/zsh-autosuggestions
git clone https://github.com/olets/zsh-abbr.git

# restart
# now it's annoying that it keeps telling you it didn't add abbreviation because it already exists
# edit plugin to comment out whole message: 
if [[ -n $existing_expansion ]]; then
 563         if (( ! force )); then
 564           #verb_phrase="Did not add"
 565           #(( dry_run )) && verb_phrase="Would not add"
 566
 567           #_abbr:util_error "$verb_phrase the $typed_scope \`${(Q)abbreviation}\`. It already has an expansion"
 568           return 2
 569         fi:which
 
 you can clean your home
 rm .bash*
 and so on
 
 install nvim from appimage to get the latest (apt-get is not always up to date)
 https://github.com/neovim/neovim/wiki/Installing-Neovim#appimage-universal-linux-package
 
 clone the config into .config/nvim
 
 
 ***********************************

 
 to avoid so many errors before launching, install dependencies first
 
 
 needed by nvim and other stuff: 
 sudo apt-get install unzip
 sudo apt-get install curl
 
 install node 
 curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
 
 verify by running: 
 command -v nvm ...this should return 'nvm', i
 
 
 if not working: make sure that this lines are in .zshrc
 export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

then 
nvm install --lts
nvm install node

check installed version: 
nvm ls

npm install -g neovim
npm install tree-sitter-cli
npm install tree-sitter

 For clipboard errors: 
 https://github.com/neovim/neovim/wiki/FAQ#how-to-use-the-windows-clipboard-from-wsl
 curl -sLo/tmp/win32yank.zip https://github.com/equalsraf/win32yank/releases/download/v0.0.4/win32yank-x64.zip
unzip -p /tmp/win32yank.zip win32yank.exe > /tmp/win32yank.exe
chmod +x /tmp/win32yank.exe
sudo mv /tmp/win32yank.exe /usr/local/bin/
 
 For mason you need this:
sudo apt-get install pip
sudo pip3 install pynvim 
sudo pip3 install virtualenv
sudo pip3 install autopep8
sudo apt-get install python3.10-venv , yes you need it for mason, pip is not enough
or maybe sudo apt install python3-venv



sudo npm install -g neovim
sudo apt install clang-format
sudo apt install cmake
sudo apt install clangd


sudo apt install ripgrep
sudo apt install fd-find

probably not needed, but less warnings in checkhealth: 
install luarocks: https://github.com/luarocks/luarocks/wiki/Installation-instructions-for-Unix
sudo apt install cargo
sudo apt install composer
sudo apt install php
sudo apt install golang-go
sudo apt install ruby-full
sudo apt install luarocks
sudo apt install default-jdk
sudo apt install default-jre

install lazygit
https://github.com/jesseduffield/lazygit#ubuntu
